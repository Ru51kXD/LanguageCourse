@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject WebApplication15.Models.LocalizationService LocalizationService
@{
    var isAuthenticated = Context.Session.GetString("UserId") != null;
    var isDarkTheme = Context.Session.GetString("Theme") == "dark";
}
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Language Learning</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dark-mode.css" asp-append-version="true" id="dark-mode-stylesheet" />
    <link rel="stylesheet" href="~/css/duolingo-common.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700;800&display=swap" rel="stylesheet">
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <!-- Кнопка навигации -->
    <button class="btn btn-primary navigation-toggle" id="navToggle">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Навигация -->
    <div class="top-navigation" id="topNav">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-4">
                    <div class="site-logo">
                        <a href="/" class="text-gradient">Language Learning</a>
                    </div>
                </div>
                <div class="col-md-8">
                    <nav class="main-nav">
                        <a href="/" class="nav-link">Главная</a>
                        <a href="/Test" class="nav-link">Тесты</a>
                        <a href="/Video" class="nav-link">Видео</a>
                        <a href="/Home/AboutUs" class="nav-link">О нас</a>
                        <a href="/Home/LearnMore" class="nav-link">Узнать больше</a>
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <a href="/Account/Profile" class="nav-link">Профиль</a>
                            <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                                <button type="submit" class="nav-link btn btn-link">Выйти</button>
                            </form>
                        }
                        else
                        {
                            <a href="/Account/Login" class="nav-link">Войти</a>
                            <a href="/Account/Register" class="nav-link">Регистрация</a>
                        }
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <!-- Основной контент -->
    <div class="centered-content" id="content">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Управление навигацией
        document.getElementById('navToggle').addEventListener('click', function() {
            const nav = document.getElementById('topNav');
            nav.classList.toggle('active');
            this.classList.toggle('active');
        });

        // Анимации для всех блоков при скролле
        document.addEventListener('DOMContentLoaded', function() {
            // Добавляем класс fade-in-up ко всем блокам, которые хотим анимировать
            const animateElements = document.querySelectorAll('.card, .card-body, .hero-section, .container > .row, .city-card');
            animateElements.forEach(element => {
                if (!element.classList.contains('fade-in-up')) {
                    element.classList.add('fade-in-up');
                }
            });

            // Настраиваем Intersection Observer для анимации
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            }, {
                threshold: 0.1
            });

            // Наблюдаем за всеми элементами с классом fade-in-up
            document.querySelectorAll('.fade-in-up').forEach(element => {
                observer.observe(element);
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
