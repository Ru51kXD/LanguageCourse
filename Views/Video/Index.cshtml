@model IEnumerable<WebApplication15.Models.Video>
@{
    ViewData["Title"] = "–í–∏–¥–µ–æ—É—Ä–æ–∫–∏";
    var languages = ViewBag.Languages as List<WebApplication15.Models.Language>;
    var levels = ViewBag.Levels as List<WebApplication15.Models.LanguageLevel>;
    var filteredLevels = ViewBag.FilteredLevels as List<WebApplication15.Models.LanguageLevel>;
    var selectedLanguage = ViewBag.SelectedLanguage;
    var selectedLevel = ViewBag.SelectedLevel;
    var diagnosticCount = ViewBag.DiagnosticCount;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–∏–ª—å—Ç—Ä–µ
    var uniqueLevels = filteredLevels?.Select(l => l.Name).Distinct().ToList() ?? 
                       levels?.Select(l => l.Name).Distinct().ToList();
    
    // –°–ª–æ–≤–∞—Ä—å —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–æ–≤ –¥–ª—è —è–∑—ã–∫–æ–≤
    var languageFlags = new Dictionary<string, string>
    {
        { "–ö–∞–∑–∞—Ö—Å–∫–∏–π", "üá∞üáø" },
        { "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "üá¨üáß" },
        { "–¢—É—Ä–µ—Ü–∫–∏–π", "üáπüá∑" },
        { "–†—É—Å—Å–∫–∏–π", "üá∑üá∫" },
        { "–ù–µ–º–µ—Ü–∫–∏–π", "üá©üá™" },
        { "–ò—Å–ø–∞–Ω—Å–∫–∏–π", "üá™üá∏" },
        { "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", "üá´üá∑" },
        { "–ö–∏—Ç–∞–π—Å–∫–∏–π", "üá®üá≥" },
        { "–ê—Ä–∞–±—Å–∫–∏–π", "üá¶üá™" },
        { "–Ø–ø–æ–Ω—Å–∫–∏–π", "üáØüáµ" }
    };
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ —è–∑—ã–∫–∞–º
    var videosByLanguage = new Dictionary<string, List<WebApplication15.Models.Video>>();
    if (Model != null)
    {
        foreach (var video in Model)
        {
            var language = languages?.FirstOrDefault(l => l.Id == video.LanguageLevel?.LanguageId)?.Name ?? "–î—Ä—É–≥–æ–π";
            if (!videosByLanguage.ContainsKey(language))
            {
                videosByLanguage[language] = new List<WebApplication15.Models.Video>();
            }
            videosByLanguage[language].Add(video);
        }
    }
}

<link rel="stylesheet" href="~/css/videos.css" asp-append-version="true" />

<div class="video-page-container">
    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
    <div class="video-hero">
        <div class="container">
            <h1>–í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –ø–æ –∏–∑—É—á–µ–Ω–∏—é —è–∑—ã–∫–æ–≤</h1>
            <p>–ò–∑—É—á–∞–π—Ç–µ —è–∑—ã–∫–∏ —Å –ø–æ–º–æ—â—å—é –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏ —É—Ä–æ–≤–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç.</p>
        </div>
    </div>

    <div class="container">
        <!-- –§–∏–ª—å—Ç—Ä—ã -->
        <div class="filters-section">
            <div class="row">
                <div class="col-md-5">
                    <div class="filter-group">
                        <label><i class="fas fa-globe"></i> –Ø–∑—ã–∫</label>
                        <div class="filter-options">
                            <a href="@Url.Action("Index", new { levelName = selectedLevel })" class="filter-option @(selectedLanguage == null ? "active" : "")">–í—Å–µ —è–∑—ã–∫–∏</a>
                            @if (languages != null)
                            {
                                foreach (var language in languages)
                                {
                                    <a href="@Url.Action("Index", new { languageId = language.Id, levelName = selectedLevel })" 
                                       class="filter-option @(selectedLanguage == language.Name ? "active" : "")">
                                        @(languageFlags.ContainsKey(language.Name) ? languageFlags[language.Name] + " " : "")@language.Name
                                    </a>
                                }
                            }
                        </div>
                    </div>
                </div>
                
                <div class="col-md-5">
                    <div class="filter-group">
                        <label><i class="fas fa-layer-group"></i> –£—Ä–æ–≤–µ–Ω—å</label>
                        <div class="filter-options">
                            <a href="@Url.Action("Index", new { languageId = ViewBag.SelectedLanguageId })" class="filter-option @(selectedLevel == null ? "active" : "")">–í—Å–µ —É—Ä–æ–≤–Ω–∏</a>
                            @if (uniqueLevels != null)
                            {
                                foreach (var levelName in uniqueLevels)
                                {
                                    <a href="@Url.Action("Index", new { languageId = ViewBag.SelectedLanguageId, levelName = levelName })" 
                                       class="filter-option @(selectedLevel == levelName ? "active" : "")">
                                        @levelName
                                    </a>
                                }
                            }
                        </div>
                    </div>
                </div>
                
                <div class="col-md-2 d-flex align-items-center justify-content-center">
                    <a href="@Url.Action("Index")" class="apply-filters">
                        <i class="fas fa-redo-alt"></i> –°–±—Ä–æ—Å–∏—Ç—å
                    </a>
                </div>
            </div>
        </div>

        <!-- –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–≤—Ä–µ–º–µ–Ω–Ω–æ) -->
        <div class="alert alert-info">
            <p>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –Ω–∞–π–¥–µ–Ω–æ @diagnosticCount –≤–∏–¥–µ–æ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏</p>
            <p>–í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫: @(selectedLanguage ?? "–ù–µ –≤—ã–±—Ä–∞–Ω")</p>
            <p>–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: @(selectedLevel ?? "–ù–µ –≤—ã–±—Ä–∞–Ω")</p>
            <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: @(string.Join(", ", uniqueLevels ?? new List<string>()))</p>
        </div>

        <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —è–∑—ã–∫–∞–º –≤–∏–¥–µ–æ -->
        @if (selectedLanguage != null || selectedLevel != null)
        {
            <div class="language-section" id="filtered-videos">
                <div class="language-title">
                    <h2>
                        @if (selectedLanguage != null)
                        {
                            @(languageFlags.ContainsKey(selectedLanguage) ? languageFlags[selectedLanguage] + " " : "")
                            @selectedLanguage
                        }
                        @(selectedLanguage != null && selectedLevel != null ? " - " : "")
                        @(selectedLevel != null ? selectedLevel : "–í—Å–µ —É—Ä–æ–≤–Ω–∏")
                    </h2>
                </div>
                
                <div class="videos-grid">
                    @if (Model != null && Model.Any())
                    {
                        foreach (var video in Model)
                        {
                            <div class="video-card" data-language="@languages?.FirstOrDefault(l => l.Id == video.LanguageLevel?.LanguageId)?.Name" data-level="@video.LanguageLevel?.Name">
                                <div class="video-thumbnail">
                                    <img src="@(string.IsNullOrEmpty(video.ThumbnailUrl) ? "/images/videos/default.jpg" : video.ThumbnailUrl)" 
                                         onerror="this.src='/images/videos/default.jpg'" alt="@video.Title">
                                    <div class="play-button">
                                        <i class="fas fa-play"></i>
                                    </div>
                                    <div class="video-level">@video.LanguageLevel?.Name</div>
                                </div>
                                <div class="video-info">
                                    <h3 class="video-title">@video.Title</h3>
                                    <p class="video-description">@video.Description</p>
                                    <a href="@Url.Action("Details", new { id = video.Id })" class="watch-button">
                                        –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ <i class="fas fa-arrow-right"></i>
                                    </a>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-videos">
                            <i class="fas fa-video-slash fa-3x mb-3"></i>
                            <h3>–í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                            <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞.</p>
                            <a href="@Url.Action("Index")" class="btn-reset">–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä</a>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <!-- –°–µ–∫—Ü–∏–∏ –ø–æ —è–∑—ã–∫–∞–º -->
            <div class="language-sections">
                @foreach (var languageGroup in videosByLanguage.Take(3))
                {
                    <div class="language-section" id="@languageGroup.Key.ToLower()-section">
                        <div class="language-title">
                            <span class="flag">@(languageFlags.ContainsKey(languageGroup.Key) ? languageFlags[languageGroup.Key] : "")</span>
                            <h2>@languageGroup.Key</h2>
                            <a href="@Url.Action("Index", new { languageId = languages?.FirstOrDefault(l => l.Name == languageGroup.Key)?.Id })" class="view-all">
                                –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏ <i class="fas fa-chevron-right"></i>
                            </a>
                        </div>
                        
                        <div class="videos-grid">
                            @foreach (var video in languageGroup.Value.Take(3))
                            {
                                <div class="video-card">
                                    <div class="video-thumbnail">
                                        <img src="@(string.IsNullOrEmpty(video.ThumbnailUrl) ? "/images/videos/default.jpg" : video.ThumbnailUrl)" 
                                             onerror="this.src='/images/videos/default.jpg'" alt="@video.Title">
                                        <div class="play-button">
                                            <i class="fas fa-play"></i>
                                        </div>
                                        <div class="video-level">@video.LanguageLevel?.Name</div>
                                    </div>
                                    <div class="video-info">
                                        <h3 class="video-title">@video.Title</h3>
                                        <p class="video-description">@video.Description</p>
                                        <a href="@Url.Action("Details", new { id = video.Id })" class="watch-button">
                                            –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ <i class="fas fa-arrow-right"></i>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                
                @if (!videosByLanguage.Any())
                {
                    <div class="no-videos">
                        <i class="fas fa-video-slash fa-3x mb-3"></i>
                        <h3>–í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                        <p>–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –Ω–µ—Ç –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ.</p>
                    </div>
                }
            </div>
        }
        
        <!-- CTA —Å–µ–∫—Ü–∏—è -->
        <div class="cta-section">
            <div class="row">
                <div class="col-md-12 text-center">
                    <h2>–•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤?</h2>
                    <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤.</p>
                    <div class="cta-buttons">
                        <a href="@Url.Action("Register", "Account")" class="cta-button cta-button-primary">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a>
                        <a href="@Url.Action("AboutUs", "Home")" class="cta-button cta-button-secondary">–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            
            // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            const elements = document.querySelectorAll('.video-card, .language-section, .cta-section');
            
            elements.forEach(element => {
                element.style.opacity = '1';
                element.style.transform = 'translateY(0)';
            });
        });
    </script>
} 