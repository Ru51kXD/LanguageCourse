@model WebApplication15.Models.Video
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@using System.Globalization
@inject IViewLocalizer Localizer
@{
    // Получаем текущую культуру
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureTwoLetter = requestCulture?.RequestCulture.Culture.TwoLetterISOLanguageName ?? "ru";
    
    ViewData["Title"] = Model.Title;
    var relatedVideos = ViewBag.RelatedVideos as List<WebApplication15.Models.Video>;
    
    // Определяем, какой видеопроигрыватель использовать
    bool isYouTube = Model.Url.Contains("youtube") || Model.Url.Contains("youtu.be");
    bool isVimeo = Model.Url.Contains("vimeo");
    
    string embedUrl = "";
    if (isYouTube)
    {
        // Извлекаем ID видео из YouTube URL
        string youtubeId = "";
        if (Model.Url.Contains("youtu.be/"))
        {
            youtubeId = Model.Url.Split(new[] { "youtu.be/" }, StringSplitOptions.None)[1];
        }
        else if (Model.Url.Contains("watch?v="))
        {
            youtubeId = Model.Url.Split(new[] { "watch?v=" }, StringSplitOptions.None)[1];
        }
        else if (Model.Url.Contains("embed/"))
        {
            youtubeId = Model.Url.Split(new[] { "embed/" }, StringSplitOptions.None)[1];
        }
        
        // Удаляем параметры после ID видео
        if (youtubeId.Contains("&"))
        {
            youtubeId = youtubeId.Split('&')[0];
        }
        
        embedUrl = $"https://www.youtube.com/embed/{youtubeId}?autoplay=0&rel=0";
    }
    else if (isVimeo)
    {
        // Извлекаем ID видео из Vimeo URL
        string vimeoId = "";
        if (Model.Url.Contains("vimeo.com/"))
        {
            vimeoId = Model.Url.Split(new[] { "vimeo.com/" }, StringSplitOptions.None)[1];
        }
        
        embedUrl = $"https://player.vimeo.com/video/{vimeoId}";
    }
}

<link rel="stylesheet" href="~/css/video-details.css" asp-append-version="true" />

<div class="video-details-container">
    <!-- Хлебные крошки -->
    <div class="breadcrumbs text-center">
        <div class="container">
            <a href="@Url.Action("Index", "Home")">
                @{
                    var homeText = cultureTwoLetter switch
                    {
                        "ru" => "Главная",
                        "kk" => "Басты бет",
                        "en" => "Home",
                        "tr" => "Ana Sayfa",
                        _ => "Home"
                    };
                }
                @homeText
            </a>
            <span class="separator"><i class="fas fa-chevron-right"></i></span>
            <a href="@Url.Action("Index", "Video")">
                @{
                    var videosText = cultureTwoLetter switch
                    {
                        "ru" => "Видеоуроки",
                        "kk" => "Бейнесабақтар",
                        "en" => "Videos",
                        "tr" => "Video Dersler",
                        _ => "Videos"
                    };
                }
                @videosText
            </a>
            <span class="separator"><i class="fas fa-chevron-right"></i></span>
            <span class="current">@Model.Title</span>
        </div>
    </div>
    
    <!-- Основное содержимое -->
    <div class="container">
        <!-- Заголовок видео -->
        <div class="row mb-4">
            <div class="col-12 text-center">
                <h1 class="video-title">@Model.Title</h1>
                <div class="video-meta">
                    <span class="language-badge">
                        @{
                            var unknownLanguageText = cultureTwoLetter switch
                            {
                                "ru" => "Неизвестный язык",
                                "kk" => "Белгісіз тіl",
                                "en" => "Unknown Language",
                                "tr" => "Bilinmeyen Dil",
                                _ => "Unknown Language"
                            };
                        }
                        @(Model.LanguageLevel?.Language?.Name ?? unknownLanguageText)
                    </span>
                    <span class="level-badge">
                        @{
                            var levelText = cultureTwoLetter switch
                            {
                                "ru" => "Уровень",
                                "kk" => "Деңгей",
                                "en" => "Level",
                                "tr" => "Seviye",
                                _ => "Level"
                            };
                            
                            var notSpecifiedText = cultureTwoLetter switch
                            {
                                "ru" => "Не указан",
                                "kk" => "Көрсетілмеген",
                                "en" => "Not Specified",
                                "tr" => "Belirtilmemiş",
                                _ => "Not Specified"
                            };
                        }
                        @levelText: <strong>@(Model.LanguageLevel?.Name ?? notSpecifiedText)</strong>
                    </span>
                    @if (Model.IsWatched)
                    {
                        <span class="watched-badge">
                            <i class="fas fa-check-circle"></i> 
                            @{
                                var watchedText = cultureTwoLetter switch
                                {
                                    "ru" => "Просмотрено",
                                    "kk" => "Қаралған",
                                    "en" => "Watched",
                                    "tr" => "İzlendi",
                                    _ => "Watched"
                                };
                            }
                            @watchedText
                        </span>
                    }
                </div>
            </div>
        </div>
        
        <div class="row">
            <!-- Основное содержимое с видео -->
            <div class="col-lg-8 mx-auto">
                <!-- Видеопроигрыватель -->
                <div class="video-player-container mb-4">
                    @if (!string.IsNullOrEmpty(embedUrl))
                    {
                        <div class="video-player">
                            <iframe src="@embedUrl" frameborder="0" allowfullscreen
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture">
                            </iframe>
                        </div>
                    }
                    else
                    {
                        <div class="video-player-placeholder">
                            <p>
                                @{
                                    var videoNotAvailableText = cultureTwoLetter switch
                                    {
                                        "ru" => "Видео недоступно",
                                        "kk" => "Бейне қолжетімді емес",
                                        "en" => "Video Not Available",
                                        "tr" => "Video Mevcut Değil",
                                        _ => "Video Not Available"
                                    };
                                }
                                @videoNotAvailableText
                            </p>
                        </div>
                    }
                    
                    @if (ViewBag.IsAuthenticated && !Model.IsWatched)
                    {
                        <div class="mark-watched-container text-center mt-3">
                            <button id="markAsWatched" class="btn-mark-watched" data-video-id="@Model.Id">
                                <i class="fas fa-check-circle"></i> 
                                @{
                                    var markAsWatchedText = cultureTwoLetter switch
                                    {
                                        "ru" => "Отметить как просмотренное",
                                        "kk" => "Қаралды деп белгілеу",
                                        "en" => "Mark as Watched",
                                        "tr" => "İzlendi Olarak İşaretle",
                                        _ => "Mark as Watched"
                                    };
                                }
                                @markAsWatchedText
                            </button>
                        </div>
                    }
                </div>
                
                <!-- Информация о видео -->
                <div class="video-info-container">
                    <h3>
                        @{
                            var videoDescriptionText = cultureTwoLetter switch
                            {
                                "ru" => "Описание видео",
                                "kk" => "Бейне сипаттамасы",
                                "en" => "Video Description",
                                "tr" => "Video Açıklaması",
                                _ => "Video Description"
                            };
                        }
                        @videoDescriptionText
                    </h3>
                    <p>@Model.Description</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Обработка кнопки "Отметить как просмотренное"
            $('#markAsWatched').click(function() {
                var videoId = $(this).data('video-id');
                $.post('@Url.Action("MarkAsWatched", "Video")', { id: videoId }, function(response) {
                    if (response.success) {
                        location.reload();
                    }
                });
            });
        });
    </script>
} 